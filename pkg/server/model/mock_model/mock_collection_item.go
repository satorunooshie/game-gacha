// Code generated by MockGen. DO NOT EDIT.
// Source: collection_item.go

// Package mock_model is a generated GoMock package.
package mock_model

import (
	model "game-gacha/pkg/server/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCollectionItemRepositoryInterface is a mock of CollectionItemRepositoryInterface interface.
type MockCollectionItemRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCollectionItemRepositoryInterfaceMockRecorder
}

// MockCollectionItemRepositoryInterfaceMockRecorder is the mock recorder for MockCollectionItemRepositoryInterface.
type MockCollectionItemRepositoryInterfaceMockRecorder struct {
	mock *MockCollectionItemRepositoryInterface
}

// NewMockCollectionItemRepositoryInterface creates a new mock instance.
func NewMockCollectionItemRepositoryInterface(ctrl *gomock.Controller) *MockCollectionItemRepositoryInterface {
	mock := &MockCollectionItemRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockCollectionItemRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCollectionItemRepositoryInterface) EXPECT() *MockCollectionItemRepositoryInterfaceMockRecorder {
	return m.recorder
}

// SelectAllCollectionItems mocks base method.
func (m *MockCollectionItemRepositoryInterface) SelectAllCollectionItems() ([]*model.CollectionItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectAllCollectionItems")
	ret0, _ := ret[0].([]*model.CollectionItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectAllCollectionItems indicates an expected call of SelectAllCollectionItems.
func (mr *MockCollectionItemRepositoryInterfaceMockRecorder) SelectAllCollectionItems() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectAllCollectionItems", reflect.TypeOf((*MockCollectionItemRepositoryInterface)(nil).SelectAllCollectionItems))
}
